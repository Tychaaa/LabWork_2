#include "functions.h"

// Функция для печати текста из файла в изначальном виде
void printTextFromFile(const string& filename) 
{
    // Открываем файл для чтения
    ifstream file(filename);

    // Проверяем, удалось ли открыть файл
    if (!file.is_open()) 
    {
        // Выводим сообщение об ошибке, если файл не удается открыть
        cerr << "Не удалось открыть файл!" << endl;
        return;
    }

    // Строка для хранения считываемых данных
    string line;

    // Читаем содержимое файла построчно
    while (getline(file, line)) 
    {
        // Выводим считанную строку на экран
        cout << line << endl;
    }

    // Закрываем файл
    file.close();
}

// Функция для печати слов в текстовом файле в обратном порядке
void printReversedWords(const string& filename)
{
    // Открываем файл для чтения
    ifstream file(filename);

    // Проверяем, удалось ли открыть файл
    if (!file.is_open()) 
    {
        // Выводим сообщение об ошибке, если файл не удается открыть
        cerr << "Не удалось открыть файл!" << endl;
        return;
    }

    CharStack stack(100);   // Стек с начальным размером 100
    char ch;                // Переменная для хранения текущего считанного символа

    // Читаем файл посимвольно
    while (file.get(ch)) 
    {
        // Проверяем, является ли текущий символ разделителем
        if (ch != ' ' && ch != '\n' && ch != '\t' && ch != ',' && ch != '.') 
        {
            // Если символ не является разделителем, помещаем его в стек
            stack.push(ch);
        }
        else 
        {
            // Если встретился разделитель, извлекаем символы и печатаем их
            while (!stack.isEmpty()) 
            {
                // Печатаем символы из стека (они будут в обратном порядке)
                cout << stack.pop();
            }
            // Печатаем разделитель после слова
            cout << ch;
        }
    }

    // В случае, если в конце файла нет разделителя, но стек не пуст
    while (!stack.isEmpty()) 
    {
        cout << stack.pop();
    }

    // Закрываем файл
    file.close();
}

// Функция для печати слов в текстовом файле в обратном порядке (STL)
void printReversedWordsSTL(const string& filename)
{
    // Открываем файл для чтения
    ifstream file(filename);

    // Проверяем, удалось ли открыть файл
    if (!file.is_open())
    {
        // Выводим сообщение об ошибке, если файл не удается открыть
        cerr << "Не удалось открыть файл!" << endl;
        return;
    }

    stack<char> charStack;  // Cтек для хранения символов
    char ch;                // Переменная для хранения текущего считанного символа

    // Читаем файл посимвольно
    while (file.get(ch))
    {
        // Проверяем, является ли текущий символ разделителем
        if (ch != ' ' && ch != '\n' && ch != '\t' && ch != ',' && ch != '.')
        {
            // Если символ не является разделителем, помещаем его в стек
            charStack.push(ch);
        }
        else
        {
            // Если встретился разделитель, извлекаем символы и печатаем их
            while (!charStack.empty())
            {
                // Печатаем символы из стека (они будут в обратном порядке)
                cout << charStack.top();
                charStack.pop();
            }
            // Печатаем разделитель после слова
            cout << ch;
        }
    }

    // В случае, если в конце файла нет разделителя, но стек не пуст
    while (!charStack.empty()) {
        cout << charStack.top();
        charStack.pop();
    }

    // Закрываем файл
    file.close();
}